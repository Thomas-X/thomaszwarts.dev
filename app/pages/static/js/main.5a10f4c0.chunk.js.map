{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["HeroContainer","styled","div","ColumnTitles","h1","ColumnTextSmall","span","opacity","ColumnLinkText","a","hoverColor","TextFlexContainer","direction","Title","LineBackground","TextContainer","width","Subtitle","MyStuff","Footer","lineWidth","svg","App","useEffect","script","document","createElement","src","body","appendChild","links","projects","workedForCompanies","id","Row","noGutters","Col","xs","sm","md","style","color","map","x","i","key","target","href","marginBottom","length","marginTop","flexDirection","textAlign","justifyContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5a10f4c0.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst HeroContainer = styled.div`\r\n  display: flex;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst ColumnTitles = styled.h1`\r\n  font-size: 2.3rem;\r\n  font-family: \"Hack\";\r\n  font-weight: bold;\r\n  color: white;\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 2.3rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 4.3rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 4.45rem;\r\n  }\r\n`;\r\n\r\nconst ColumnText = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  font-size: 1rem;\r\n  font-family: \"Hack\";\r\n  font-weight: bold;\r\n  color: white;\r\n  flex: 0.6;\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 1.25rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 1.5rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 1.6rem;\r\n  }\r\n`;\r\n\r\nconst ColumnTextSmall = styled.span`\r\n  display: flex;\r\n  align-content: center;\r\n  font-size: 1rem;\r\n  font-family: \"Hack\";\r\n  font-weight: bold;\r\n  color: white;\r\n  opacity: ${({ opacity }) => opacity ?? \"0.4\"};\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 1.25rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst ColumnTextSmallMail = styled(ColumnTextSmall)`\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ColumnLinkText = styled.a`\r\n  font-size: 1rem;\r\n  font-family: \"Hack\";\r\n  font-weight: bold;\r\n  color: white;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: ${({ hoverColor }) => hoverColor ?? \"blue\"};\r\n  }\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 1.25rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst LineContainer = styled.div`\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  margin: 0.5rem 0;\r\n`;\r\n\r\nconst LinesContainer = styled.div`\r\n  align-self: center;\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 0.5rem;\r\n`;\r\n\r\nconst TextFlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: ${({ direction }) => direction ?? \"row\"};\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font: bolder 9.5vw \"Hack\";\r\n  color: white;\r\n  z-index: 1;\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 9.5vw;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 7.5vw;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 7vw;\r\n  }\r\n`;\r\n\r\nconst LineBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 4px;\r\n  background-color: #514571;\r\n  border-radius: 2px;\r\n  z-index: 2;\r\n  width: 100%;\r\n  align-self: center;\r\n  flex: 1;\r\n`;\r\n\r\nconst LineForeground = styled(LineBackground)`\r\n  position: relative;\r\n  width: ${({ width }) => width ?? \"100%\"};\r\n  z-index: 3;\r\n  background-color: #e94057;\r\n  opacity: 1;\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  position: absolute;\r\n  padding: 0 0.5rem;\r\n  align-self: center;\r\n  @media (min-width: 576px) {\r\n    padding: 0 1rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    padding: 0 2rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 0 2.5rem;\r\n  }\r\n`;\r\n\r\nconst LineAndTextContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  margin: 0.5rem 1rem;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst LineTitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n`;\r\n\r\nconst Subtitle = styled(Title)`\r\n  font: bold 4vw \"Hack\";\r\n  mix-blend-mode: soft-light;\r\n  text-transform: uppercase;\r\n  text-shadow: none;\r\n\r\n  @media (min-width: 576px) {\r\n    font-size: 4.5vw;\r\n  }\r\n  @media (min-width: 992px) {\r\n    font-size: 3.25vw;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    font-size: 2.75vw;\r\n  }\r\n`;\r\n\r\nconst MyStuff = styled.div`\r\n  padding: 1rem 0.5rem;\r\n\r\n  @media (min-width: 576px) {\r\n    padding: 1rem 1rem;\r\n  }\r\n  @media (min-width: 992px) {\r\n    padding: 1rem 2rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 1rem 2.5rem;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 1rem 2.5rem;\r\n    max-width: 1200px;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nconst ExperienceContainer = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst ExperienceLine = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst ExperienceLineContainer = styled.div`\r\n  border-left: ${({ lineWidth }) => `${lineWidth}px` ?? \"5px\"} solid\r\n    rgba(216, 27, 96, 0.4);\r\n  width: ${({ lineWidth }) => `${lineWidth}px` ?? \"5px\"};\r\n  height: 100%;\r\n`;\r\n\r\nconst ExperienceTextContainer = styled.div`\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst Footer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 1rem 0;\r\n  margin: 2rem 0 0 0;\r\n\r\n  border-top: 3px solid #514571;\r\n\r\n  @media (min-width: 576px) {\r\n    padding: 1rem 1rem;\r\n    margin: 2rem 0 0 0;\r\n  }\r\n  @media (min-width: 992px) {\r\n    padding: 2rem 1rem;\r\n    margin: 2rem 0 0 0;\r\n  }\r\n  @media (min-width: 1200px) {\r\n    padding: 2.5rem 1rem;\r\n    margin: 4rem 0 0 0;\r\n  }\r\n`;\r\n\r\nconst Dot = styled.svg`\r\n  position: absolute;\r\n  top: ${({ lineWidth }) => `${lineWidth / 2}px`};\r\n  left: ${({ lineWidth }) => `-${lineWidth / 2}px`};\r\n`;\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.src = \"index.js\";\r\n    document.body.appendChild(script);\r\n  });\r\n\r\n  const links = [\r\n    [\r\n      \"https://drive.google.com/file/d/1HVq7RilavxQPcDgmYR_3yRpLljLH3FZF/view?usp=sharing\",\r\n      \"Résumé (CV)\",\r\n    ],\r\n    [\"https://github.com/Thomas-X\", \"Github\"],\r\n    [\"https://www.linkedin.com/in/thomas-zwarts-170753158\", \"Linkedin\"],\r\n    [\"https://gitlab.com/Thomas-X\", \"Gitlab\"],\r\n  ];\r\n\r\n  const projects = [\r\n    [\"https://github.com/Thomas-X/sendai\", \"Sendai\"],\r\n    [\"https://github.com/Thomas-X/channelbot-3\", \"Channelbot 3\"],\r\n    [\r\n      \"https://github.com/Thomas-X/csharp-cellular-automaton\",\r\n      \"Cellular Automaton\",\r\n    ],\r\n    [\"https://github.com/Thomas-X/Qui\", \"Qui\"],\r\n    [\r\n      \"https://github.com/Thomas-X/sandwhich-maker\",\r\n      \"Sandwich maker (gRPC & Go)\",\r\n    ],\r\n    [\"https://github.com/Thomas-X/channelbot-2\", \"Channelbot 2 (deprecated)\"],\r\n  ];\r\n\r\n  const workedForCompanies = [\r\n    [\"https://www.storiogroup.com/\", \"Storio group (formerly Albelli)\"],\r\n    [\"https://www.albelli.nl/\", \"Albelli\"],\r\n    [\"https://www.elements.nl/\", \"Elements\"],\r\n    [\"https://www.oberon.nl/\", \"Oberon\"],\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <HeroContainer>\r\n        <TextContainer>\r\n          <Title>Thomas Zwarts</Title>\r\n          <Subtitle>developer | frontend | backend</Subtitle>\r\n        </TextContainer>\r\n        <canvas id=\"game-of-life-canvas\"></canvas>\r\n      </HeroContainer>\r\n      <MyStuff>\r\n        <Row noGutters={true}>\r\n          <Col xs={12} sm={12} md={6}>\r\n            <ColumnTitles>\r\n              <TextFlexContainer>\r\n                <ColumnTitles style={{ color: \"#26a69a\" }}>L</ColumnTitles>inks.\r\n              </TextFlexContainer>\r\n              <TextFlexContainer direction={\"column\"}>\r\n                {links.map((x, i) => (\r\n                  <ColumnLinkText\r\n                    key={i}\r\n                    target=\"_blank\"\r\n                    href={x[0]}\r\n                    hoverColor={\"#26a69a\"}\r\n                    style={{\r\n                      marginBottom: i !== links.length - 1 ? 10 : 0,\r\n                    }}\r\n                  >\r\n                    {x[1]}\r\n                  </ColumnLinkText>\r\n                ))}\r\n              </TextFlexContainer>\r\n            </ColumnTitles>\r\n          </Col>\r\n          <Col xs={12} sm={12} md={6}>\r\n            <ColumnTitles>\r\n              <TextFlexContainer>\r\n                <ColumnTitles style={{ color: \"#0288d1\" }}>P</ColumnTitles>\r\n                rojects.\r\n              </TextFlexContainer>\r\n              <TextFlexContainer direction={\"column\"}>\r\n                <ColumnTextSmall\r\n                  style={{\r\n                    marginBottom: 15,\r\n                  }}\r\n                >\r\n                  I worked on projects for these companies.\r\n                </ColumnTextSmall>\r\n                {workedForCompanies.map((x, i) => (\r\n                  <ColumnLinkText\r\n                    key={i}\r\n                    target=\"_blank\"\r\n                    href={x[0]}\r\n                    hoverColor={\"#26a69a\"}\r\n                    style={{\r\n                      marginBottom:\r\n                        i !== workedForCompanies.length - 1 ? 10 : 0,\r\n                    }}\r\n                  >\r\n                    {x[1]}\r\n                  </ColumnLinkText>\r\n                ))}\r\n              </TextFlexContainer>\r\n\r\n              <TextFlexContainer direction={\"column\"}>\r\n                <ColumnTextSmall\r\n                  style={{\r\n                    marginBottom: 15,\r\n                    marginTop: 30,\r\n                  }}\r\n                >\r\n                  Hobby projects.\r\n                </ColumnTextSmall>\r\n                {projects.map((x, i) => (\r\n                  <ColumnLinkText\r\n                    key={i}\r\n                    target=\"_blank\"\r\n                    href={x[0]}\r\n                    hoverColor={\"#26a69a\"}\r\n                    style={{\r\n                      marginBottom: i !== projects.length - 1 ? 10 : 0,\r\n                    }}\r\n                  >\r\n                    {x[1]}\r\n                  </ColumnLinkText>\r\n                ))}\r\n              </TextFlexContainer>\r\n            </ColumnTitles>\r\n          </Col>\r\n        </Row>\r\n        <Footer>\r\n          <ColumnTextSmall\r\n            style={{\r\n              flexDirection: \"column\",\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            Made with ❤ by Thomas Zwarts.\r\n          </ColumnTextSmall>\r\n          <ColumnTextSmall\r\n            opacity={1}\r\n            style={{\r\n              flexDirection: \"column\",\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            contact me at: thomaszwarts@gmail.com\r\n          </ColumnTextSmall>\r\n        </Footer>\r\n      </MyStuff>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}